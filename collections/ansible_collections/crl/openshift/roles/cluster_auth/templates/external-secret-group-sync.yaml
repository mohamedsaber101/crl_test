apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret   # https://external-secrets.io/v0.9.1/api/clusterexternalsecret/
metadata:
  name: crl-group-sync-external-secret
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/sync-options: "SkipDryRunOnMissingResource=true"
spec:
  externalSecretName: "{{ groupsync_secret_name  }}"
  namespaceSelector:
    matchLabels: 
      secrets: {{ groupsync_secret_name  }}
  refreshTime: "15s" # How often this secret is synchronized
  externalSecretSpec:
    refreshInterval: "1h"
    secretStoreRef:
      name: azure-secret-store
      kind: ClusterSecretStore
    target: # Our target Kubernetes Secret
      name: {{ groupsync_secret_name  }} # Name of the secret to create.  If not present, then the secretKey field under data will be used
      creationPolicy: Owner # This will create the secret if it doesn't exist
    data:  # Below three keys (AZURE_CLIENT_) are required by the Group Sync operator.
      - secretKey: AZURE_CLIENT_ID
        remoteRef:
          key: {{ Azure_KV_client_name }} # # Secret Nanem in Azure KV   
      - secretKey: AZURE_TENANT_ID
        remoteRef:
          key: {{ Azure_KV_tenant_id }} # # Secret Nanem in Azure KV  
      - secretKey: AZURE_CLIENT_SECRET
        remoteRef:
          key: {{ Azure_KV_secret }} # # Secret Nanem in Azure KV 